/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'
import {
  DepositStakeWithSlippageArgs,
  depositStakeWithSlippageArgsBeet,
} from '../types/DepositStakeWithSlippageArgs'

/**
 * @category Instructions
 * @category DepositStakeWithSlippage
 * @category generated
 */
export type DepositStakeWithSlippageInstructionArgs = {
  depositStakeWithSlippageArgs: DepositStakeWithSlippageArgs
}
/**
 * @category Instructions
 * @category DepositStakeWithSlippage
 * @category generated
 */
export const DepositStakeWithSlippageStruct = new beet.BeetArgsStruct<
  DepositStakeWithSlippageInstructionArgs & {
    instructionDiscriminator: number
  }
>(
  [
    ['instructionDiscriminator', beet.u8],
    ['depositStakeWithSlippageArgs', depositStakeWithSlippageArgsBeet],
  ],
  'DepositStakeWithSlippageInstructionArgs'
)
/**
 * Accounts required by the _DepositStakeWithSlippage_ instruction
 *
 * @property [_writable_, **signer**] payer
 * @property [] stakePoolProgram
 * @property [_writable_] depositReceipt
 * @category Instructions
 * @category DepositStakeWithSlippage
 * @category generated
 */
export type DepositStakeWithSlippageInstructionAccounts = {
  payer: web3.PublicKey
  stakePoolProgram: web3.PublicKey
  depositReceipt: web3.PublicKey
}

export const depositStakeWithSlippageInstructionDiscriminator = 3

/**
 * Creates a _DepositStakeWithSlippage_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category DepositStakeWithSlippage
 * @category generated
 */
export function createDepositStakeWithSlippageInstruction(
  accounts: DepositStakeWithSlippageInstructionAccounts,
  args: DepositStakeWithSlippageInstructionArgs,
  programId = new web3.PublicKey('5TAiuAh3YGDbwjEruC1ZpXTJWdNDS7Ur7VeqNNiHMmGV')
) {
  const [data] = DepositStakeWithSlippageStruct.serialize({
    instructionDiscriminator: depositStakeWithSlippageInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.payer,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: accounts.stakePoolProgram,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.depositReceipt,
      isWritable: true,
      isSigner: false,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
