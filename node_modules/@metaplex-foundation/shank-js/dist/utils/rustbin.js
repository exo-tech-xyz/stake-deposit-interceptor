"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkAndInstallRustBinary = void 0;
const rustbin_1 = require("@metaplex-foundation/rustbin");
const logs_1 = require("./logs");
async function checkAndInstallRustBinary(rustbinConfig) {
    const match = await (0, rustbin_1.rustbinMatch)(rustbinConfig, confirmAutoMessageLog);
    if (!match.binVersion) {
        const binary = rustbinConfig.binaryName;
        throw new Error(`rustbin was unable to determine installed version ${binary}, ` +
            `it may not have been installed correctly.`);
    }
    return match;
}
exports.checkAndInstallRustBinary = checkAndInstallRustBinary;
async function confirmAutoMessageLog({ binaryName, libVersion, libName, binVersion, fullPathToBinary, }) {
    if (binVersion == null) {
        (0, logs_1.logInfo)(`No existing version found for ${binaryName}.`);
    }
    else {
        (0, logs_1.logInfo)(`Version for ${binaryName}: ${binVersion}`);
    }
    (0, logs_1.logInfo)(`Will install version matching "${libName}: '${libVersion}'" to ${fullPathToBinary}`);
    return true;
}
//# sourceMappingURL=rustbin.js.map